#include <stdio.h>
int size1 = 0;
void swap(int *a1, int *b1)
{
  int temp1 = *b1;
  *b1 = *a1;
  *a1 = temp1;
}

// algorithm to check whether the values of root, left child as well as right child are larger compared to each other and swap them.
void heapI(int array1[], int size1, int e)
{
  if (size1 == 1)
  {
    printf("Single element in the heap");
  }
  else
  {
    int largest = e;
    int l = 2 * e + 1;
    int u = 2 * e + 2;
    if (l < size1 && array1[l] > array1[largest])
      largest = l;
    if (r < size1 && array1[r] > array1[largest])
      largest = u;
    if (largest != e)
    {
      swap(&array1[e], &array1[largest]);
      heapI(array1, size1, largest);
    }
  }
}

//insert new numbers
void insert(int array1[], int newNum)
{
  if (size1 == 0)
  {
    array1[0] = newNum;
    size1 += 1;
  }
  else
  {
    array1[size1] = newNum;
    size1 += 1;
    for (int e = size1 / 2 - 1; e >= 0; e--)
    {
      heapI(array1, size1, e);
    }
  }
}
void extract_min(int array1[], int num)
{
  int e;
  for (e = 0; e < size1; e++)
  {
    if (num == array1[e])
      break;
  }

  swap(&array1[e], &array1[size1 - 1]);
  size1 -= 1;
  for (int i = size1 / 2 - 1; i >= 0; i--)
  {
    heapI(array1, size1, e);
  }
}
void printArray1(int array1[], int size)
{
  for (int e = 0; e < size1; ++e)
    printf("%d ", array1[e]);
  printf("\n");
}
int main()
{
  int array1[10];

  insert(array1, 3);
  insert(array1, 4);
  insert(array1, 9);
  insert(array1, 5);
  insert(array1, 2);

  printf("Max-Heap array: ");
  printArray1(array1, size1);
}
